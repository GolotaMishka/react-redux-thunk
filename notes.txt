За замовчуванням, екшени в Redux є синхронними, що є проблемою для програми, 
якій потрібно взаємодіяти з серверним API, або виконувати інші асинхронні дії. 
На щастя Redux надає нам таку штуку як middleware, 
яка стоїть між диспатчем екшену та редюсером. 

Middleware - це програмний рівень, розташований між додатками та операційними системами.

Існує дві найпопулярніші middleware бібліотеки для асинхронних екшенів у Redux, це – Redux Thunk та Redux Saga.

Повторить action, action creator.

Redux Thunk це middleware бібліотека, яка дозволяє викликати action creator, 
повертаючи при цьому функцію замість об'єкта. 
Функція приймає метод dispatch як аргумент, щоб після того, як асинхронна операція 
завершиться, використовувати його для диспатчингу звичайного синхронного екшену всередині тіла функції.

В цій функції будуть асинхронні дії якісь та синхронні виклики dispatch.

yarn add redux-thunk

добавляєм Middleware
import thunk from 'redux-thunk';
const store = createStore(rootReducer, applyMiddleware(thunk));

Звичайний action переписать на асинхронний.

Обратите внимание, как наш addTodo action creator возвращает 
функцию, вместо обычного экшен объекта. Эта функция принимает аргумент dispatch из store.

